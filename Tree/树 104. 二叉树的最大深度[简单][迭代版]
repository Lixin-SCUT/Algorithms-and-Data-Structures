> 给定一个二叉树，找出其最大深度。
> 二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。
> 说明: 叶子节点是指没有子节点的节点。
> 示例：
> 给定二叉树 [3,9,20,null,null,15,7]，
>     3
>    / \
>   9  20
>      /  \
>    15   7
> 返回它的最大深度 3 。
> 
> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com/problems/maximum-depth-of-binary-tree
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

迭代版实现
```
     int maxDepth(TreeNode* root){
         if(root==NULL) return 0;
         queue<pair<TreeNode*,int>> node_queue;
         pair<TreeNode*,int> cur;
         TreeNode* cur_node;
         int depth;
         int res=0;
         node_queue.push({root,1});
         while(node_queue.size()){
             cur=node_queue.front();
             node_queue.pop();
             cur_node=cur.first;
             depth=cur.second;
             res=res>depth?res:depth;
             if(cur_node->left)
                node_queue.push({cur_node->left, depth+1});
             if(cur_node->right)
                node_queue.push({cur_node->right, depth+1});
         }
         return res;
     }
```
非常诡异 res必须手动初始化为0，否则会出错？？？
